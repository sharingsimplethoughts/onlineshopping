# Generated by Django 2.1.5 on 2019-02-20 10:36

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cat_name', models.CharField(max_length=10)),
                ('cat_image', models.ImageField(upload_to='CatImg')),
                ('active', models.BooleanField(default=False)),
                ('des', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Colour',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('colour', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='CouponCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('valid_from', models.DateTimeField()),
                ('valid_to', models.DateTimeField()),
                ('is_for_all', models.BooleanField(default=False)),
                ('is_for_selected_users', models.BooleanField(default=False)),
                ('is_for_all_product', models.BooleanField(default=False)),
                ('terms_and_cond', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomerProductCart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selected_size', models.CharField(blank=True, max_length=20, null=True)),
                ('selected_color', models.CharField(blank=True, max_length=20, null=True)),
                ('selected_quantity', models.PositiveIntegerField(default=1)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomerProductWishList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='HomePageImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False)),
                ('image', models.ImageField(upload_to='homepage')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('total_quantity', models.PositiveIntegerField()),
                ('description', models.TextField()),
                ('avg_rating', models.FloatField(default=0.0)),
                ('actual_price', models.PositiveIntegerField()),
                ('special_price', models.PositiveIntegerField(blank=True, null=True)),
                ('special_date_from', models.DateTimeField(blank=True, null=True)),
                ('special_date_to', models.DateTimeField(blank=True, null=True)),
                ('more_info', models.TextField()),
                ('isfree_delivery', models.BooleanField(default=False)),
                ('stock_status', models.BooleanField(default=True)),
                ('active', models.BooleanField(default=False)),
                ('main_img', models.ImageField(default='Product/default', upload_to='Product/MainImg')),
                ('material', models.CharField(blank=True, max_length=100, null=True)),
                ('fit', models.CharField(blank=True, max_length=100, null=True)),
                ('pattern', models.CharField(blank=True, max_length=100, null=True)),
                ('brand', models.CharField(blank=True, max_length=100, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('colour', models.CharField(blank=True, max_length=20, null=True)),
                ('size', models.CharField(blank=True, max_length=20, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.Category')),
            ],
        ),
        migrations.CreateModel(
            name='ProductAvailableSize',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.Product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductColoursWithQuantity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80)),
                ('init_stock_qty', models.PositiveIntegerField()),
                ('current_stock_qty', models.PositiveIntegerField()),
                ('price', models.PositiveIntegerField(blank=True, null=True)),
                ('colour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.Colour')),
                ('product_available_size', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.ProductAvailableSize')),
            ],
        ),
        migrations.CreateModel(
            name='ProductFilterSubTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subtag', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='ProductFilterTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='Product/OtherImg')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.Product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductReviews',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(1)])),
                ('content', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.Product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subcat_name', models.CharField(max_length=20)),
                ('subcat_image', models.ImageField(upload_to='SubCatImg')),
                ('active', models.BooleanField(default=False)),
                ('des', models.TextField(blank=True, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.Category')),
            ],
        ),
        migrations.CreateModel(
            name='SubSubCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subsubcat_name', models.CharField(max_length=30)),
                ('subsubcat_image', models.ImageField(upload_to='SubSubCatImg')),
                ('active', models.BooleanField(default=False)),
                ('des', models.TextField(blank=True, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.Category')),
                ('subcategory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.SubCategory')),
            ],
        ),
        migrations.AddField(
            model_name='productfiltertag',
            name='subsubcategory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.SubSubCategory'),
        ),
        migrations.AddField(
            model_name='productfiltersubtag',
            name='productfiltertag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.ProductFilterTag'),
        ),
        migrations.AddField(
            model_name='productavailablesize',
            name='size',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.Size'),
        ),
        migrations.AddField(
            model_name='product',
            name='product_filter_tag',
            field=models.ManyToManyField(to='product.ProductFilterTag'),
        ),
        migrations.AddField(
            model_name='product',
            name='subcategory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.SubCategory'),
        ),
        migrations.AddField(
            model_name='product',
            name='subsubcategory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.SubSubCategory'),
        ),
        migrations.AddField(
            model_name='product',
            name='user',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='customerproductwishlist',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.Product'),
        ),
        migrations.AddField(
            model_name='customerproductwishlist',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='customerproductcart',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.Product'),
        ),
        migrations.AddField(
            model_name='customerproductcart',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='couponcode',
            name='selected_product',
            field=models.ManyToManyField(to='product.Product'),
        ),
        migrations.AddField(
            model_name='couponcode',
            name='selected_users',
            field=models.ManyToManyField(to=settings.AUTH_USER_MODEL),
        ),
    ]
